---
interface Props {
  color?: string;
  currentNumber: number;
  maxNumber: number;
  fullWidth?: string;
  backgroundType?: 'solid' | 'dots';
  currentProgress?: string;
  children?: string | string[];
}

const {
  color,
  currentNumber,
  maxNumber,
  fullWidth,
  backgroundType = 'solid',
  currentProgress,
  children,
} = Astro.props;
const progress = Math.min((currentNumber / maxNumber || 0) * 100, 100);
---

<div
  role="progressbar"
  aria-valuenow={currentNumber}
  aria-valuemax={maxNumber}
  class={`relative w-[${fullWidth || '100%'}] rounded-sm h-10 mx-auto`}
>
  <div
    class="bg-gray-200 dark:bg-gray-200 h-full rounded-[inherit]"
    style={{
      ...(backgroundType === 'dots' && {
        mask: 'radial-gradient(circle, #000 1.25px, transparent 0px) 0 0 / 8px 8px',
      }),
    }}
  >
  </div>
  <div
    class={`absolute inset-0 h-10 rounded-[inherit] ${color || 'bg-watermarkGreen'}`}
    style={{ width: `${progress}%` }}
  >
    {children}
  </div>
  {
    currentProgress && (
      <span class="donation-card-funded-percent-header absolute right-0 top-0 p-3">
        {currentProgress}% FUNDED
      </span>
    )
  }
</div>
